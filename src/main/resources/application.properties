#redis的配置
spring.redis.host=localhost
spring.redis.port=6379


spring.datasource.url=jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=UTF-8&useSSL=false
#springboot的版本不同：driver不同 com.mysql.jdbc.Driver
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=root
#spring.datasource.schema=classpath:t_user.sql  建表语句

#指定数据源（springboot2.1.4.RELEASE 默认使用数据源：class com.zaxxer.hikari.HikariDataSource）
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

#####以下这些配置报黄，是因为这些配置不在 DataSourceProperties 类中
#####所以需要自己定义一个configure。（项目中的 DruidConfig 类）

#初始化时建立物理连接的个数 默认0
spring.datasource.initialSize=5
#最小连接池数量 默认0
spring.datasource.minIdle=5
#最大连接池数量 默认8
spring.datasource.maxActive=5
#获取连接时最大等待时间，单位毫秒 默认-1
spring.datasource.maxWait=20
#间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 默认60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
#连接在池中最小生存的时间 默认1800000
spring.datasource.minEvictableIdleTimeMillis=300000
#用来检测连接是否有效的sql，要求是一个查询语句.如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
spring.datasource.validationQuery=SELECT 1 FROM DRUID
spring.datasource.testWhileIdle=true
#申请连接时执行validationQuery检测连接是否有效
spring.datasource.testOnBorrow=false
#归还连接时执行validationQuery检测连接是否有效
spring.datasource.testOnReturn=false
#是否缓存preparedStatement，也就是PSCache
spring.datasource.poolPreparedStatements=false
#属性类型是字符串，通过别名的方式配置扩展插件.监控统计用的filter:stat
spring.datasource.filters=stat
#默认10
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20

#开启驼峰规则（mybatis默认不开启）将实体类中的 testField 对应数据库表中的 test_field
#mybatis.configuration.map-underscore-to-camel-case=true

mybatis.mapper-locations=classpath:mapper/*.xml
logging.level.com.company.project.mapper=debug

#查看SpringBoot启动时相关配置Bean
#debug=true